@using HCM.Common.Constants
@model HCM.Models.ViewModels.Employees.EmployeeCreateRequestModel

<div class="container my-5">
    <h2>Create Employee</h2>
    <button type="button" class="btn btn-primary mt-2" data-toggle="modal" data-target="#fileModal">
       Click here to create an employee from File
    </button>

    <div class="modal" id="fileModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Upload a File</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="file" id="fileInput">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="uploadButton">Upload</button>
                </div>
            </div>
        </div>
    </div>
    <form asp-action="Create" method="post">
        <div class="form-group">
            <label>
                <b>Email</b>
            </label>
            <input name="email" type="email" class="form-control" id="Email" asp-for="Email" required>
        </div>
        <div class="form-group">
            <label>
                <b>Firstname</b>
            </label>
            <input name="firstname" type="text" class="form-control" id="FirstName" asp-for="FirstName" required>
        </div>
        <div class="form-group">
            <label>
                <b>Lastname</b>
            </label>
            <input name="lastname" type="text" class="form-control" id="LastName" asp-for="LastName" required>
        </div>
        <div class="form-group">
            <label>
                <b>Birth Date</b>
            </label>
            <input name="birthDate" type="date" class="form-control" id="BirthDate" value="@DateTime.Today.AddYears(-20).ToString("yyyy-MM-dd")"
                   min="@DateTime.Today.AddYears(-ValidationConstants.EmployeeConstants.MaxEmployeeAge).ToString("yyyy-MM-dd")" max="@DateTime.Today.AddYears(-ValidationConstants.EmployeeConstants.MinEmployeeAge).ToString("yyyy-MM-dd")" asp-for="BirthDate">

        </div>
        <div class="form-group">
            <label>
                <b>Phone number</b>
            </label>
            <input type="tel" class="form-control" id="PhoneNumber" asp-for="PhoneNumber" required>
        </div>
        <div class="form-group">
            <label>
                <b>Nationality</b>
            </label>
            <select name="NationalityId" class="form-control" id="Options.Countries" asp-for="Options.Countries">
                @foreach (var country in Model.Options.Countries)
                {
                    <option value="@country.Id">@country.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>
                <b>Gender</b>
            </label>
            <select name="GenderId" class="form-control" id="Options.Genders" asp-for="Options.Genders">
                @foreach (var gender in Model.Options.Genders)
                {
                    <option value="@gender.Id">@gender.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>
                <b>Department</b>
            </label>
            <select name="DepartmentId" class="form-control departments" id="Options.Departments" asp-for="Options.Departments">
                @foreach (var department in Model.Options.Departments)
                {
                    <option value="@department.DepartmentId">@department.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="Options.Positions">Position</label>
            <select name="PositionId" class="form-control positions" id="Options.Positions" asp-for="Options.Positions">
            </select>
        </div>
        <div class="form-group">
            <label for="Options.Seniority">Seniority</label>
            <select name="SeniorityId" class="form-control seniorities" id="Options.Seniority" asp-for="Options.Seniority">
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Create</button>
    </form>
</div>


<style>
    .form-group {
        margin: 10px 0;
    }

    label b {
        display: block;
        font-weight: bold;
    }
    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }
    select.form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .btn {
        background-color: #4e73df;
        color: #f8f9fc;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn:hover {
            background-color: #4e73df;
        }
</style>


@section Scripts
{
    <script>
        let selectedDepartmentId = 1;
        let selectedPositionId = 1;
        let token = "Bearer " + localStorage.getItem("Authorization")

        $(document).ready(function () {
            $(".departments").on('click', function () {
                selectedDepartmentId = $('.departments').find(":selected").val();
                $.ajax({
                    type: "GET",
                    url: "https://localhost:7153/departments/positions/" + selectedDepartmentId,
                    headers: { "Authorization": token },
                    data: {},
                    success: function (data) {
                        let arguments = "";
                        for (let i = 0; i < data.length; i++) {
                            arguments += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                        }
                        $(".positions").html(arguments);
                    },
                });
            });

            $(".positions").on('click', function () {
                selectedPositionId = $('.positions').find(":selected").val();
                $.ajax({
                    type: "GET",
                    url: "https://localhost:7153/departments/seniorities/" + selectedPositionId,
                    headers: { "Authorization": token },
                    data: {},
                    success: function (data) {
                        console.log(data.Countries);
                        let arguments = "";
                        for (let i = 0; i < data.length; i++) {
                            console.log(data[i].name);
                            arguments += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                        }
                        $(".seniorities").html(arguments);
                    },
                });
            });


            $("#uploadButton").click(function () {
                console.log('click');
                var fileInput = $("#fileInput")[0];
                if (fileInput.files.length > 0) {
                    var file = fileInput.files[0];

                    var formData = new FormData();
                    formData.append("file", file);

                    $.ajax({
                        url: "https://localhost:7153/employees/postCreate",
                        type: "POST",
                        data: formData,
                        processData: false, 
                        contentType: false,
                        headers: { "Authorization": token },
                        success: function (data) {
                            Toastify({
                                text: data,
                                duration: 3000,
                                newWindow: true,
                                close: true,
                                gravity: "top",
                                position: "right",
                                stopOnFocus: true,
                                style: {
                                    background: "linear-gradient(to right, #00b09b, #96c93d)",
                                },
                            }).showToast();
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });
                }

                $("#fileModal").modal("hide");
            });


        });
    </script>


}