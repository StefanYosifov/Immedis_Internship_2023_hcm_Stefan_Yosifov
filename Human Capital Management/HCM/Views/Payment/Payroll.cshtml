@model HCM.Models.ViewModels.Payments.Payroll.PayrollPaginationModel

<link rel="stylesheet" href="~/css/button.css" />
<link rel="stylesheet" href="~/css/inputs.css" />

<div class="container-fluid m-5">
    <form id="myForm" class="flex" method="get" asp-controller="Employee" asp-action="All" asp-route-id="@Model.Page">
        <div class="row">
            <div class="col-md-2">
                <label>
                    <b>Start Date</b>
                </label>
                <input type="date" name="startDate" class="form-control bg-light border-0 small" />
            </div>

            <div class="col-md-2">
                <label>
                    <b>End Date</b>
                </label>
                <input type="date" name="endDate" class="form-control bg-light border-0 small" />
            </div>

            <div class="col-md-2">
                <label for="departments"> <b>Departments</b></label>
                <select>
                    <option value="0">Select department</option>
                    @foreach (var department in Model.Departments)
                    {
                        <option value="@department.DepartmentId">@department.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <button>Submit</button>
            </div>
        </div>
    </form>

    <div class="card shadow mb-4 mt-5 me-5">
        <div class="card-header py-3 justify-content-lg-around">
            <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                Open Modal
            </button>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="thead-dark">
                        <tr>
                        <tr>
                            <th>Employee Name</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Department Name</th>
                            <th>Bonus Amount</th>
                            <th>Bonuses Count</th>
                            <th>Gross Pay</th>
                            <th>Net Pay</th>
                            <th>Deduction Amount</th>
                            <th>Deductions Count</th>
                            <th>Tax Rate</th>
                            <th>Created On</th>
                            <th>Paid On</th>
                            <th colspan="2" class="text-center">Actions</th>
                        </tr>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payroll in Model.Payroll!)
                        {
                            <tr>
                                <td>@payroll.EmployeeName</td>
                                <td>@payroll.StartDate.ToShortDateString()</td>
                                <td>@payroll.EndDate.ToShortDateString()</td>
                                <td>@payroll.DepartmentName</td>
                                <td>@payroll.BonusAmount</td>
                                <td>@payroll.Bonuses.Count</td>
                                <td>@payroll.GrossPay</td>
                                <td>@payroll.NetPay</td>
                                <td>@payroll.DeductionAmount</td>
                                <td>@payroll.Deductions.Count</td>
                                <td>@payroll.TaxRate</td>
                                <td>@payroll.CreatedOn.ToShortDateString()</td>
                                @if (@payroll.PaidOn == null)
                                {
                                    <td>-</td>
                                }
                                else
                                {
                                    <td>@payroll.PaidOn.ToString()</td>
                                }
                                <td>
                                    @if (@payroll.PaidOn == null)
                                    {

                                        <button class="payoffButton" value="@payroll.Id">Pay off salary</button>
                                    }
                                    else
                                    {
                                        <h6>Already paid :)</h6>
                                    }
                                </td>
                                <td>
                                    <button class="removePayrollButton" value="@payroll.Id">Remove payroll</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link">Previous</a>
                </li>
                @{
                    var loopUntil = Model.Page + 3;
                    for (var i = Model.Page - 2; i < loopUntil; i++)
                    {
                        if (i <= 0 || i > Model.TotalPages)
                        {
                            continue;
                        }
                        <li class="page-item @(i == Model.Page ? "active" : "")">
                            <a asp-controller="Employee" asp-action="All" asp-route-id="@i" class="page-link">@i</a>
                        </li>
                    }
                }
                <li class="page-item">
                    <a class="page-link">Next</a>
                </li>
            </ul>
        </nav>
    </div>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="tab1-tab" data-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" aria-selected="true">Create payroll</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="tab2-tab" data-toggle="tab" href="#tab2" role="tab" aria-controls="tab2" aria-selected="false">Confirm and pay</a>
                        </li>
                    </ul>
                </div>
                <div class="modal-body">
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab1-tab">
                            <p>You are about to run payroll, it's going to automatically create a new payroll for the month. All bonuses and deduction will be counted towards current one, these are just calculation. If you wish to pay off salaries go to the other page</p>
                            <form id="createPayroll">
                                <div class="form-group">
                                    <label for="disableDates">Disable Dates:</label>
                                    <input type="checkbox" id="disableDates" name="DisableDates" />
                                </div>
                                <small> Automatically create a payroll since the date, till end of this month</small>
                                <div class="form-group">
                                    <label for="startDate">Start Date:</label>
                                    <input type="date" id="startDate" name="startDate" class="form-control dates" />
                                </div>

                                <div class="form-group">
                                    <label for="endDate">End Date:</label>
                                    <input type="date" id="endDate" name="endDate" class="form-control dates" />
                                </div>
                                <div class="form-group">
                                    <small>Create payroll for departments : </small>
                                    @foreach (var department in Model.Departments)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="@department.DepartmentId" name="departmentIds">
                                            <label class="form-check-label" for="inlineCheckbox1">@department.Name</label>
                                        </div>
                                    }
                                </div>
                                <div class="form-group">
                                    <small>Pay percentage of their salary</small>
                                    <input type="number" id="percentage" name="percentage" value="100" />
                                </div>
                                <hr />
                                <div class="form-group">
                                    <input class="form-check-input" type="checkbox" id="payrollBonuses" name="includeBonuses" />
                                    <label for="includeBonuses">Include bonuses</label>
                                </div>
                                <div class="form-group">
                                    <input class="form-check-input" type="checkbox" id="payrollDeductions" name="includeDeductions" />
                                    <label for="includeDeductions">Include deductions</label>
                                </div>

                                <button>Create</button>
                            </form>
                        </div>
                        <div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="tab2-tab">
                            <div class="row" id="unpaidSalaries">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to perform this action?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmButton">Confirm</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
    {

    <script>

        const url = "https://localhost:7153/payments/payroll";
        const token = "Bearer " + localStorage.getItem("Authorization");
        let id = 0;

        function CreatePayroll() {
            $("#createPayroll").submit(function (e) {
                e.preventDefault();

                const formData = {
                    "startDate": $("#startDate").val(),
                    "endDate": $("#endDate").val(),
                    "departmentIds": $("input[name='departmentIds']:checked").map(function () {
                        return parseInt($(this).val(), 10);
                    }).get(),
                    "percentage": parseInt($("#percentage").val(), 10),
                    "includeBonuses": $("#payrollBonuses").is(":checked"),
                    "includeDeductions": $("#payrollDeductions").is(":checked")
                }
                const jsonData = JSON.stringify(formData);


                console.log(formData);
                console.log(jsonData);

                $.ajax({
                    url: url + "/create",
                    type: "Post",
                    data: jsonData,
                    headers: { "Authorization": token },
                    contentType: "application/json",
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (error) {

                        console.error("Error:", error);
                    }
                });
            });
        }

        function UnpaidPayrolls() {

            $.ajax({
                url: url + "/unpaid",
                type: "Get",
                headers: { "Authorization": token },
                contentType: "application/json",
                success: function (response) {
                    $.each(response, function (index, item) {
                        console.log(item);
                        const departmentImageUrl = item.departmentImageUrl || '';
                        const departmentName = item.departmentName;
                        const totalPayment = item.totalPayment;
                        const employeeCount = item.employeeCount;
                        const html = `
                                                                                    <ul class="list-group mb-3">
                                                                                        <li class="list-group-item">
                                                                                            <div class="row align-items-center">
                                                                                                <div class="col-md-3 text-center">
                                                                                                    <img class="avatar" src="${departmentImageUrl}" alt="Department Image" width="50" height="50">
                                                                                                </div>
                                                                                                <div class="col-md-6 text-center">
                                                                                                    <h6>${departmentName}</h6>
                                                                                                    Total Payment: ${totalPayment}<br>
                                                                                                    Employee Count: ${employeeCount}
                                                                                                </div>
                                                                                                <div class="col-md-3 text-center">
                                                                                                    <button type="button" class="btn btn-sm btn-primary">Pay</button>
                                                                                                </div>
                                                                                            </div>
                                                                                        </li>
                                                                                    </ul>
                                                                                    `;

                        $('#unpaidSalaries').append(html);
                    });
                }

            })
        }

        function SendConfirmationCompleteRequest(id) {
            $.ajax({
                url: url + "/complete/" + id,
                type: "Put",
                headers: { "Authorization": token },
                success: function (response) {
                    console.log(response);
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            })
        }


        function SendConfirmationRemoveRequest(id) {
            $.ajax({
                url: url + "/remove/" + id,
                type: "Delete",
                headers: { "Authorization": token },
                success: function (response) {
                    console.log(response);
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            })
        }

        function Confirmations() {
            $(document).on('click', '.payoffButton, .removePayrollButton', function () {
                const id = $(this).attr("value");
                const isCompleteAction = $(this).hasClass("payoffButton");

                $('#confirmationModal').modal('show');

                $('#confirmButton').off('click').on('click', function () {
                    if (isCompleteAction) {
                        SendConfirmationCompleteRequest(id);
                    } else {
                        SendConfirmationRemoveRequest(id);
                    }
                    $('#confirmationModal').modal('hide');
                });
            });
        }


        $(document).ready(function () {
            $("#disableDates").on("change", function () {
                console.log("hi");
                if ($(this).is(":checked")) {
                    $("#startDate").prop("disabled", true);
                    $("#startDate").val('');
                    $("#endDate").prop("disabled", true);
                    $("#endDate").val('');
                } else {
                    $("#startDate").prop("disabled", false);
                    $("#endDate").prop("disabled", false);
                }
            });

            CreatePayroll();
            UnpaidPayrolls();
            Confirmations();
        });

    </script>

}
