@model HCM.Models.ViewModels.Departments.DepartmentDetailsViewModel

@{
    ViewData["Title"] = "Department Details";
    Layout = "_Layout";
}

<div>
    <div class="d-flex p-2 border shadow mt-md-4">
        <ul class="nav nav-pills">
            <li class="nav-item min" onclick="showTab('tab1')">
                <a class="nav-link" href="#">Details</a>
            </li>
            <li class="nav-item" onclick="showTab('tab2')">
                <a class="nav-link" href="#">Employees</a>
            </li>
            <li class="nav-item" onclick="showTab('tab3')">
                <a class="nav-link" href="#">Manage positions</a>
            </li>
            <li class="nav-item" onclick="showTab('tab4')">
                <a class="nav-link" href="#">Add employees</a>
            </li>
            <li class="nav-item" onclick="showTab('tab5')">
                <a class="nav-link" href="#">Edit details</a>
            </li>
        </ul>
    </div>


    <div class="row mt-lg-5 h-100 mx-3">
        <div class="card" id="tab1">
            <div class="card-header d-flex align-items-center border-bottom">
                <span class="avatar text-bg-primary avatar-lg fs-5">
                    @if (Model.DepartmentName.Length > 3)
                    {
                        @Model.DepartmentName.Substring(0, 3)
                    }
                    else
                    {
                        @Model.DepartmentName
                    }
                </span>
                <div class="ms-3">
                    <h6 class="mb-0 fs-5">@Model.DepartmentName</h6>
                    <span class="text-muted fs-sm">@Model.CountryName</span>
                </div>
                <button class="btn text-muted ms-auto" data-toggle="modal" data-target="#myModal" type="button">
                    <i class="fas fa-ellipsis-v"></i>
                </button>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h6 class="mb-0">
                        <small><strong>ID:</strong> @Model.DepartmentId</small>
                    </h6>
                </div>
                <div class="mb-3">
                    <h6 class="mb-0">
                        <small><strong>Average Salary:</strong> @Model.AverageSalary</small>
                    </h6>
                </div>
                <div class="mb-3">
                    <h6 class="mb-0">
                        <small><strong>Employee Count:</strong> @Model.EmployeesCount</small>
                    </h6>
                </div>
                <div class="mb-3">
                    <h6 class="mb-0">
                        <small><strong>Total Positions:</strong> @Model.EmployeeCapacity</small>
                    </h6>
                </div>
                <div class="mb-3">
                    <h6 class="mb-0">
                        <small><strong>Average Age:</strong> @Model.AverageAge.ToString("F")</small>
                    </h6>
                </div>
            </div>
        </div>
        <div class="card" id="tab2" style="display: none;">
            <div class="shadow mb-4 mt-4 me-5 border rounded">
                <div class="py-3">
                    <h4 class="m-0 font-weight-bold text-primary">Employees</h4>
                </div>
                <div class="mx-auto">
                    <div class="table-responsive custom-table">
                        <table class="table table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th>Full Name</th>
                                    <th>Age</th>
                                    <th>Nationality</th>
                                    <th>Gender</th>
                                    <th>Position</th>
                                    <th>Seniority</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.DepartmentEmployees != null && Model.DepartmentEmployees.Any())
                                {
                                    foreach (var employee in Model.DepartmentEmployees)
                                    {
                                        <tr>
                                            <td>@employee.EmployeeFullName</td>
                                            <td>@employee.EmployeeAge</td>
                                            <td>@employee.EmployeeNationalityISO</td>
                                            <td>@employee.EmployeeGender</td>
                                            <td>@employee.EmployeePosition</td>
                                            <td>@employee.EmployeeSeniority</td>
                                            <td>
                                                <button class="btn btn-primary edit-button">Edit</button>
                                            </td>
                                            <td>
                                                <button class="btn btn-danger delete-button" value="@employee.EmployeeId">Delete</button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="8" class="text-center">No employees available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="card" id="tab3" style="display: none;">
            <div class="d-flex flex-column align-items-center justify-content-center">
                <div class="bg-light p-4 mb-4 d-flex justify-content-center align-items-center my-2 rounded" style="width: 750px;">
                    <div>
                        <h5 class="mb-4 mt-0 pt-4">Department roles</h5>
                        <p>Beware, when removing a position from the department, the employees also lose their position and seniority alongside it</p>
                        <ol class="list-group list-group-numbered">
                            @foreach (var position in Model.PositionsInDepartment)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="ms-2 me-auto">
                                        <div class="fs-6">@position.PositionName</div>
                                        <p class="mb-0 fs-6 text-muted">
                                            <strong>Id: </strong>
                                            <span>@position.PositionId</span>
                                            <i class="fa-solid fa-trash ms-3" style="cursor: pointer;"></i>
                                        </p>
                                    </div>
                                    <span class="badge bg-primary">@position.EmployeesWithPositionCount</span>
                                </li>
                            }
                        </ol>
                    </div>
                </div>
                <div class="bg-light p-4 d-flex justify-content-center align-items-center my-2 rounded" style="width: 750px;">
                    <div>
                        <h5 class="pt-3 pb-3 mb-4 border-bottom">
                            <i class="fa fa-android me-2"></i> Available positions to add to the department
                        </h5>
                        @foreach (var position in Model.AvailablePositionsCollection)
                        {
                            <div class="row mb-3">
                                <div class="col-md-10">
                                    <h6 class="text-primary">
                                        <a href="#" class="text-decoration-none">@position.Name</a>
                                        <span class="text-secondary"> - Available for @Model.DepartmentName</span>
                                    </h6>
                                </div>
                                <div class="col-md-2">
                                    <h6 class="text-primary">
                                        <a class="add-icon" data-position-id="@position.Id" href="#">
                                            <i class="fa-solid fa-plus pointer-event"></i>
                                        </a>
                                    </h6>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="card" id="tab4" style="display: none">
            <div class="form-group">
                <h4 class="text-center mb-4 mt-0 pt-4">Add Employees</h4>
                <div class="d-flex justify-content-center">
                    <form id="employeeForm" class="mb-4 mt-0 pt-4">
                        <div class="custom-select">
                            <input type="text" id="custom-select-input" placeholder="Select an option" class="mb-5">
                            <ul class="custom-select-options">
                            </ul>
                        </div>
                        <div class="shadow mb-4 mt-5">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary" id="employeeFullName">Click on the dropdown to select an employee</h6>
                            </div>
                            <div class="card-body">
                                <p id="employeeDetails"></p>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card" id="tab5" style="display: none">
            <div class="card-body container">
                <div class="bg-light row d-flex justify-content-center align-items-center">
                    <h5 class="text-center mb-4 mt-0 pt-4">Details</h5>
                    <div class="col-md-4 ml-5">
                        <div class="p-5">
                            <img src="@Model.DepartmentImageUrl" class="w-100 h-100 rounded-1" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <form id="detailsEdit" class="m-5 p-5">
                            <div class="form-group">
                                <label class="form-label" for="Name">Department Name</label>
                                <input value="@Model.DepartmentName" type="text" name="Name" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="MaxPeopleCount">Employee Capacity</label>
                                <input value="@Model.EmployeeCapacity" type="number" name="MaxPeopleCount" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="ImageURL">Department Image URL</label>
                                <input value="@Model.DepartmentImageUrl" type="text" name="ImageURL" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label class="form-label" for="CountryId">Country Name</label>
                                <select name="CountryId" class="form-control">
                                    @foreach (var country in Model.Countries)
                                    {
                                        <option value="@country.Id">@country.Name</option>
                                    }
                                </select>
                            </div>

                            <button type="submit" class="btn btn-primary my-2">Submit</button>
                        </form>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


<style>
    .custom-select {
        position: relative;
        display: inline-block;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    #custom-select-input {
        width: 200%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .custom-select-options {
        position: absolute;
        top: -50%;
        right: 100%;
        display: none;
        border: 1px solid #ddd;
        border-top: none;
        list-style: none;
        padding: 5%;
        margin: 0;
        background-color: #f8f9fc;
        max-height: 400px;
        overflow-y: auto;
    }


        .custom-select-options li {
            padding: 2px;
            cursor: pointer;
            border-bottom: 1px solid #ddd;
        }

            .custom-select-options li:hover {
                background-color: #f8f9fc;
            }


    .card-body h6 {
        margin: 0px 0;
        font-size: 18px;
    }


    .avatar {
        background-color: #4e73df;
        color: #ffffff;
        border-radius: 50%;
        padding: 10px;
        font-size: 1.2rem;
        margin-right: 10px;
    }

    .btn-primary {
        background-color: #4e73df;
        color: #ffffff;
        border: none;
        border-radius: 3px;
        padding: 8px 15px;
        cursor: pointer;
    }

    .modal-content {
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    fieldset {
        display: none;
    }

        fieldset.show {
            display: block;
        }

    button:focus {
        -moz-box-shadow: none !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
        outline-width: 0;
    }

    .tabs {
        margin: 2px 5px 0px 5px;
        padding-bottom: 10px;
        cursor: pointer;
    }

        .tabs:hover, .tabs.active {
            border-bottom: 1px solid #4e73df;
        }

    a:hover {
        text-decoration: none;
        color: #4e73df;
    }

    .box {
        margin-bottom: 10px;
        border-radius: 5px;
        padding: 10px;
    }

    .modal-backdrop {
        background-color: #4e73df;
    }

    .line {
        background-color: #ddd;
        height: 1px;
        width: 100%;
    }

    .modal.fade .modal-dialog {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;
    }

    .tabs h6 {
        font-size: 14px;
    }

    input[type="text"], input[type="number"], {
        width: 50%;
        padding: 5px;
        border: 1px solid #ddd;
        border-radius: 3px;
        font-size: 14px;
    }

    button.btn-primary {
        margin-top: 5px;
        background-color: #4e73df;
        color: #f8f9fc;
        border: none;
        border-radius: 3px;
        padding: 4px 15px;
    }

    table {
        border-collapse: collapse;
        width: 99%;
        padding: 1%;
    }
</style>



@if (false)
{
    <script src="~/lib/jquery/dist/jquery.js" type="text/javascript"></script>
}

@section Scripts
    {
    <script type="text/javascript">

        const baseUrl = "https://localhost:7153";
        const url = "https://localhost:7153/departments";
        var currentUrl = window.location.pathname;
        var departmentId = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
        const token = "Bearer " + localStorage.getItem("Authorization");

        function showTab(tabId) {
            $('.card').hide();
            $('#' + tabId).show();
        }

        function DetailsEdit() {
            $("#detailsEdit").submit(function (e) {
                e.preventDefault();

                var departmentName = $("input[name='Name']").val();
                var employeeCapacity = $("input[name='MaxPeopleCount']").val();
                var departmentImageUrl = $("input[name='ImageURL']").val();
                var countryId = $("select[name='CountryId']").val();

                $.ajax({
                    url: url + "/edit/data",
                    type: "Put",
                    data: JSON.stringify({
                        departmentId: departmentId, Name: departmentName, MaxPeopleCount: employeeCapacity,
                        ImageUrl: departmentImageUrl,
                        countryId: countryId
                    }),
                    headers: { "Authorization": token },
                    contentType: 'application/json',
                    success: function (data) {
                        toastr.success(data);
                    },
                    error: function (error) {
                        toastr.error(error.responseText);
                    }
                });
            });
        }

        function KickEmployee() {
            $(".delete-button").click(function (e) {
                e.preventDefault();

                let row = $(this).closest("tr");
                let employeeId = row.find("td:eq(7) button").attr('value');

                $.ajax({
                    url: "https://localhost:7153/departments/employee/remove",
                    type: "Delete",
                    headers: { "Authorization": token },
                    contentType: 'application/json',
                    data: JSON.stringify({ departmentId: departmentId, employeeId: employeeId }),
                    success: function (data) {
                        toastr.success(data);
                        row.remove();
                    }
                })

            })
        }

        function addOption(data) {
            let $customSelectList = $(".custom-select-options");
            let $li = $("<li>");
            var $card = $(".card-select");
            $li.attr("data-value", data.id);
            $li.text(data.fullName);

            $li.on("click", function () {
                let selectedValue = $(this).data("value");
                let selectedText = $(this).text();
                $("#custom-select-input").val(selectedText);

                $("#employeeFullName").text(data.fullName);
                $("#employeeDetails").html(
                    "<h6><strong>ID:</strong> " + data.id + "</h6>" +
                    "<h6><strong>Name:</strong> " + data.fullName + "</h6>" +
                    "<h6><strong>Age:</strong> " + data.age + "</h6>" +
                    "<h6><strong>Account Created On:</strong> " + data.accountCreatedOn + "</h6>" +
                    "<button class='btn btn-primary' id='addDepartment' value='" + data.id + "'>Add to department</button>"

                );
            });

            $customSelectList.append($li);
        }

        function AddToDepartment() {
            $("#employeeForm").submit(function (e) {
                e.preventDefault();

                let employeeId = $("#addDepartment").val();
                console.log(employeeId);
                console.log(departmentId);

                $.ajax({
                    url: "https://localhost:7153/departments/employee/add",
                    type: "POST",
                    headers: { "Authorization": token },
                    contentType: 'application/json',
                    data: JSON.stringify({ EmployeeId: employeeId, DepartmentId: departmentId }),
                    success: function (data) {
                        toastr.success(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr.error(jqXHR.responseText);
                    }
                })
            })
        }

        function SearchUsername(searchName) {
            var $customSelectList = $(".custom-select-options");
            $customSelectList.empty();

            $.ajax({
                url: "https://localhost:7153/employees/search?name=" + searchName,
                type: "GET",
                headers: { "Authorization": token },
                contentType: 'application/json',
                success: function (data) {
                    for (let i = 0; i < data.length; i++) {
                        addOption(data[i]);
                    }
                },
                error: function (xhr, status, error) {

                }
            })
        }

        function AsyncSearch() {
            var typingTimer;
            var doneTypingInterval = 2000;
            var $input = $('#custom-select-input');

            $input.on('keyup', function () {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(doneTyping, doneTypingInterval);
            });

            $input.on('keydown', function () {
                clearTimeout(typingTimer);
            });

            function doneTyping() {
                SearchUsername($input.val());
            }
        }

        function ChangeEdit() {
            $(".edit-button").click(function () {
                let row = $(this).closest("tr");
                let positionCell = row.find("td:eq(4)");
                let seniorityCell = row.find("td:eq(5)");


                if ($(this).text() === "Edit") {
                    $(this).text("Save");

                    let currentPosition = positionCell.text();
                    let currentSeniority = seniorityCell.text();

                    let availablePositions = @Html.Raw(Json.Serialize(Model.PositionsInDepartment));

                    var positionDropdown = '<select>';
                    for (let i = 0; i < availablePositions.length; i++) {
                        let option = '<option value="' + availablePositions[i].positionId + '">' + availablePositions[i].positionName + '</option>';
                        if (availablePositions[i].name === currentPosition) {
                            option = option.replace('value="', 'value="' + currentPosition + '" selected="selected"');
                        }
                        positionDropdown += option;
                    }
                    positionDropdown += '</select>';

                    positionCell.html(positionDropdown);
                    let seniorityDropdown = '<select>';

                    positionCell.find('select').change(function () {
                        let selectedValue = $(this).val();

                        console.log(selectedValue);
                        $.ajax({
                            url: 'https://localhost:7153/departments/seniorities/' + selectedValue,
                            type: "GET",
                            headers: { "Authorization": token },
                            contentType: 'application/json',
                            success: function (data) {
                                var updatedSeniorityDropdown = '<select>';
                                for (let i = 0; i < data.length; i++) {
                                    var option = '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                                    if (data[i].name === currentSeniority) {
                                        option = option.replace('value="', 'value="' + currentSeniority + '" selected="selected"');
                                    }
                                    updatedSeniorityDropdown += option;
                                }
                                updatedSeniorityDropdown += '</select>';
                                seniorityCell.html(updatedSeniorityDropdown);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {

                            }
                        });
                    });

                    seniorityDropdown += '</select>';
                    seniorityCell.html(seniorityDropdown);



                } else if ($(this).text() === "Save") {
                    $(this).text("Edit");

                    let selectedPositionId = positionCell.find("select").val();
                    let selectedPositionName = positionCell.find("select option:selected").text();
                    let selectedSeniorityId = seniorityCell.find("select").val();
                    let selectedSeniorityName = seniorityCell.find("select option:selected").text();
                    let employeeId = row.find("td:eq(7) button").attr('value');

                    positionCell.text(selectedPositionName);
                    seniorityCell.text(selectedSeniorityName);

                    console.log(selectedPositionId);
                    console.log(selectedSeniorityId);
                    console.log(employeeId);

                    let model = {
                        employeeId: employeeId,
                        positionId: selectedPositionId,
                        seniorityId: selectedSeniorityId
                    }

                    console.log(model);

                    $.ajax({
                        url: "https://localhost:7153/employees/position/seniority",
                        type: "Put",
                        headers: { "Authorization": token },
                        contentType: 'application/json',
                        data: JSON.stringify(model),
                        success: function (data) {
                           toastr.success(data);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.log(jqXHR);
                            console.log(textStatus);
                            console.log(errorThrown);
                        }
                    });
                }
            });

        }

        function ChangeTabs() {
            $(".tabs").click(function () {

                $(".tabs").removeClass("active");
                $(".tabs h6").removeClass("font-weight-bold");
                $(".tabs h6").addClass("text-muted");
                $(this).children("h6").removeClass("text-muted");
                $(this).children("h6").addClass("font-weight-bold");
                $(this).addClass("active");

                current_fs = $(".active");

                next_fs = $(this).attr('id');
                next_fs = "#" + next_fs + "1";

                $("fieldset").removeClass("show");
                $(next_fs).addClass("show");

                current_fs.animate({}, {
                    step: function () {
                        current_fs.css({
                            'display': 'none',
                            'position': 'relative'
                        });
                        next_fs.css({
                            'display': 'block'
                        });
                    }
                });
            });
        }

        function AddToDepartmentPositions() {
            $(".add-icon").on("click", function (e) {
                const currData = $(this).data();
                const positionId = $(this).data("position-id");
                const currentRow = $(this).closest(".row");
                $.ajax({
                    url: url + "/positions/add",
                    type: 'post',
                    data: JSON.stringify({ positionId: positionId, departmentId: departmentId }),
                    headers: { "Authorization": token },
                    contentType: 'application/json',
                    success: function (data) {
                        toastr.success(data);
                       currentRow.remove();
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                        toastr.error(error);
                    }
                });
            });
        }

        function RemovePositionFromDepartment() {
            $(".fa-trash").on("click", function () {

                const listItem = $(this).closest("li");
                const positionId = $(this).closest("p").find("span").text();

                $.ajax({
                    url: url + "/positions/remove",
                    type: 'Delete',
                    data: JSON.stringify({ positionId: positionId, departmentId: departmentId }),
                    headers: { "Authorization": token },
                    contentType: 'application/json',
                    success: function (data) {
                       toastr.success(data);
                        listItem.remove();
                    },
                })

            });
        }

        function SelectChangeValues() {
            $("#custom-select-input").on("focus", function () {
                $(".custom-select-options").show();
            });

            $("#custom-select-input").on("input", function () {
                let searchTerm = $(this).val().toLowerCase();
                $(".custom-select-options li").each(function () {
                    if ($(this).text().toLowerCase().indexOf(searchTerm) > -1) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $(".custom-select-options li").on("click", function () {
                let selectedValue = $(this).data("value");
                let selectedText = $(this).text();
                $("#custom-select-input").val(selectedText);
                $(".custom-select-options").hide();
            });
        }

        $(document).ready(function () {
            DetailsEdit();
            KickEmployee();
            AddToDepartment();
            AsyncSearch();
            SearchUsername();
            SelectChangeValues();
            ChangeTabs();
            AddToDepartmentPositions();
            RemovePositionFromDepartment();
            ChangeEdit();
            showTab('tab1')
        });
    </script>

}